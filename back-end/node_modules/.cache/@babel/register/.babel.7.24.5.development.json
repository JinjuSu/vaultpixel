{"{\"assumptions\":{},\"sourceRoot\":\"/Users/bill.m/Desktop/master/Swinburne/vault-pixel/back-end/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/bill.m/Desktop/master/Swinburne/vault-pixel/back-end\",\"filename\":\"/Users/bill.m/Desktop/master/Swinburne/vault-pixel/back-end/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/bill.m/Desktop/master/Swinburne/vault-pixel/back-end\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.5:development":{"value":{"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _mongodb = require(\"mongodb\");\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _express = _interopRequireDefault(require(\"express\"));\n// Connect MongoDB when the server is started\nfunction start() {\n  return _start.apply(this, arguments);\n}\nfunction _start() {\n  _start = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee16() {\n    var mongodbURL, client, db, app, populatedCartIds, _populatedCartIds;\n    return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n      while (1) switch (_context16.prev = _context16.next) {\n        case 0:\n          _populatedCartIds = function _populatedCartIds3() {\n            _populatedCartIds = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(ids) {\n              return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n                while (1) switch (_context15.prev = _context15.next) {\n                  case 0:\n                    return _context15.abrupt(\"return\", Promise.all(ids.map(function (id) {\n                      return db.collection(\"products\").findOne({\n                        id: id\n                      });\n                    }) // Equivalent to using map() in API calling level\n                    ));\n                  case 1:\n                  case \"end\":\n                    return _context15.stop();\n                }\n              }, _callee15);\n            }));\n            return _populatedCartIds.apply(this, arguments);\n          };\n          populatedCartIds = function _populatedCartIds2(_x) {\n            return _populatedCartIds.apply(this, arguments);\n          };\n          mongodbURL = \"mongodb+srv://vaultpixel-db:769s46jD1a2fLPNK@database1.sqf5wlh.mongodb.net/?retryWrites=true&w=majority&appName=Database1\";\n          client = new _mongodb.MongoClient(mongodbURL);\n          _context16.next = 6;\n          return client.connect();\n        case 6:\n          db = client.db(\"vaultpixel-db\");\n          app = (0, _express[\"default\"])();\n          app.use(_express[\"default\"].json());\n          app.use(\"/images\", _express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, \"../assets/wallets\"))); // Enable Express server to serve images for the front-end\n\n          // ------ Read items in the database using app.get() call back\n\n          // Get all orders from orders table\n          app.get(\"/api/orders\", /*#__PURE__*/function () {\n            var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res) {\n              var orders;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return db.collection(\"orders\").find({}).toArray();\n                  case 3:\n                    orders = _context.sent;\n                    console.log(\"Orders fetched from database:\", orders);\n                    res.send(orders);\n                    _context.next = 12;\n                    break;\n                  case 8:\n                    _context.prev = 8;\n                    _context.t0 = _context[\"catch\"](0);\n                    console.error(\"Failed to fetch orders:\", _context.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 12:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee, null, [[0, 8]]);\n            }));\n            return function (_x2, _x3) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n\n          // Get the last order from orders table\n          app.get(\"/api/orders/last\", /*#__PURE__*/function () {\n            var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res) {\n              var lastOrder;\n              return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.prev = 0;\n                    _context2.next = 3;\n                    return db.collection(\"orders\").find({}).sort({\n                      orderId: -1\n                    }).limit(1).toArray();\n                  case 3:\n                    lastOrder = _context2.sent;\n                    if (lastOrder.length === 0) {\n                      res.status(404).send(\"No orders found\");\n                    } else {\n                      res.send(lastOrder[0]);\n                    }\n                    _context2.next = 11;\n                    break;\n                  case 7:\n                    _context2.prev = 7;\n                    _context2.t0 = _context2[\"catch\"](0);\n                    console.error(\"Failed to fetch last order:\", _context2.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 11:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }, _callee2, null, [[0, 7]]);\n            }));\n            return function (_x4, _x5) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n\n          // Post a new order into orders table\n          app.post(\"/api/orders\", /*#__PURE__*/function () {\n            var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res) {\n              var newOrder;\n              return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n                while (1) switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.prev = 0;\n                    newOrder = req.body;\n                    _context3.next = 4;\n                    return db.collection(\"orders\").insertOne(newOrder);\n                  case 4:\n                    res.status(201).send(\"Order created\");\n                    _context3.next = 11;\n                    break;\n                  case 7:\n                    _context3.prev = 7;\n                    _context3.t0 = _context3[\"catch\"](0);\n                    console.error(\"Failed to create order:\", _context3.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 11:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }, _callee3, null, [[0, 7]]);\n            }));\n            return function (_x6, _x7) {\n              return _ref3.apply(this, arguments);\n            };\n          }());\n\n          // Update user's purchasedOrders list\n          app.put(\"/api/users/:userId/purchasedOrders\", /*#__PURE__*/function () {\n            var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res) {\n              var userId, orderId;\n              return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n                while (1) switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.prev = 0;\n                    userId = req.params.userId;\n                    orderId = req.body.orderId;\n                    _context4.next = 5;\n                    return db.collection(\"users\").updateOne({\n                      id: userId\n                    }, {\n                      $addToSet: {\n                        purchasedOrders: orderId\n                      } // $addToSet prevents duplicates\n                    });\n                  case 5:\n                    res.status(200).send(\"Purchased orders updated\");\n                    _context4.next = 12;\n                    break;\n                  case 8:\n                    _context4.prev = 8;\n                    _context4.t0 = _context4[\"catch\"](0);\n                    console.error(\"Failed to update purchased orders:\", _context4.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 12:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }, _callee4, null, [[0, 8]]);\n            }));\n            return function (_x8, _x9) {\n              return _ref4.apply(this, arguments);\n            };\n          }());\n\n          // Get a specific order by orderId\n          app.get(\"/api/payment/:orderId\", /*#__PURE__*/function () {\n            var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(req, res) {\n              var orderId, order;\n              return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n                while (1) switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.prev = 0;\n                    orderId = parseInt(req.params.orderId); // Convert orderId to integer if stored as integer in MongoDB\n                    _context5.next = 4;\n                    return db.collection(\"orders\").findOne({\n                      orderId: orderId\n                    });\n                  case 4:\n                    order = _context5.sent;\n                    if (!order) {\n                      res.status(404).send(\"Order not found\");\n                    } else {\n                      res.json(order);\n                    }\n                    _context5.next = 12;\n                    break;\n                  case 8:\n                    _context5.prev = 8;\n                    _context5.t0 = _context5[\"catch\"](0);\n                    console.error(\"Failed to fetch order:\", _context5.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 12:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }, _callee5, null, [[0, 8]]);\n            }));\n            return function (_x10, _x11) {\n              return _ref5.apply(this, arguments);\n            };\n          }());\n\n          // PUT endpoint to update order\n          app.put(\"/api/orders/:orderId/update\", /*#__PURE__*/function () {\n            var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(req, res) {\n              var orderId, _req$body, address, paymentDetails, orderStatus, result;\n              return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n                while (1) switch (_context6.prev = _context6.next) {\n                  case 0:\n                    orderId = parseInt(req.params.orderId);\n                    _req$body = req.body, address = _req$body.address, paymentDetails = _req$body.paymentDetails, orderStatus = _req$body.orderStatus;\n                    _context6.prev = 2;\n                    _context6.next = 5;\n                    return db.collection(\"orders\").updateOne({\n                      orderId: orderId\n                    }, {\n                      $set: {\n                        address: address,\n                        paymentDetails: paymentDetails,\n                        orderStatus: orderStatus\n                      }\n                    });\n                  case 5:\n                    result = _context6.sent;\n                    if (result.modifiedCount === 0) {\n                      res.status(404).send(\"Order not found\");\n                    } else {\n                      res.status(200).send(\"Order updated\");\n                    }\n                    _context6.next = 13;\n                    break;\n                  case 9:\n                    _context6.prev = 9;\n                    _context6.t0 = _context6[\"catch\"](2);\n                    console.error(\"Failed to update order:\", _context6.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 13:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }, _callee6, null, [[2, 9]]);\n            }));\n            return function (_x12, _x13) {\n              return _ref6.apply(this, arguments);\n            };\n          }());\n\n          // Get all orders for a specific user\n          app.get(\"/api/orders/user/:userId\", /*#__PURE__*/function () {\n            var _ref7 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(req, res) {\n              var userId, orders;\n              return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n                while (1) switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.prev = 0;\n                    userId = req.params.userId;\n                    _context7.next = 4;\n                    return db.collection(\"orders\").find({\n                      userId: userId\n                    }).toArray();\n                  case 4:\n                    orders = _context7.sent;\n                    if (orders.length === 0) {\n                      res.status(404).send(\"No orders found for this user.\");\n                    } else {\n                      res.status(200).json(orders);\n                    }\n                    _context7.next = 12;\n                    break;\n                  case 8:\n                    _context7.prev = 8;\n                    _context7.t0 = _context7[\"catch\"](0);\n                    console.error(\"Failed to fetch orders for user:\", _context7.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 12:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }, _callee7, null, [[0, 8]]);\n            }));\n            return function (_x14, _x15) {\n              return _ref7.apply(this, arguments);\n            };\n          }());\n\n          // PUT endpoint to update order's comment\n          app.put(\"/api/orders/:orderId/comment\", /*#__PURE__*/function () {\n            var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(req, res) {\n              var orderId, comment, result;\n              return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n                while (1) switch (_context8.prev = _context8.next) {\n                  case 0:\n                    orderId = parseInt(req.params.orderId);\n                    comment = req.body.comment;\n                    _context8.prev = 2;\n                    _context8.next = 5;\n                    return db.collection(\"orders\").updateOne({\n                      orderId: orderId\n                    }, {\n                      $set: {\n                        comment: comment\n                      }\n                    });\n                  case 5:\n                    result = _context8.sent;\n                    if (result.modifiedCount === 0) {\n                      res.status(404).send(\"Order not found or no update needed.\");\n                    } else {\n                      res.status(200).send(\"Comment updated successfully.\");\n                    }\n                    _context8.next = 13;\n                    break;\n                  case 9:\n                    _context8.prev = 9;\n                    _context8.t0 = _context8[\"catch\"](2);\n                    console.error(\"Failed to update comment:\", _context8.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 13:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }, _callee8, null, [[2, 9]]);\n            }));\n            return function (_x16, _x17) {\n              return _ref8.apply(this, arguments);\n            };\n          }());\n\n          // Get all commented orders\n          app.get(\"/api/orders/commented\", /*#__PURE__*/function () {\n            var _ref9 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(req, res) {\n              var ordersWithComments;\n              return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n                while (1) switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.prev = 0;\n                    _context9.next = 3;\n                    return db.collection(\"orders\").find({\n                      comment: {\n                        $nin: [\"\", null]\n                      }\n                    }) // This query selects orders where comment is neither \"\" nor null\n                    .toArray();\n                  case 3:\n                    ordersWithComments = _context9.sent;\n                    if (ordersWithComments.length === 0) {\n                      res.status(404).send(\"No commented orders found.\");\n                    } else {\n                      res.json(ordersWithComments);\n                    }\n                    _context9.next = 11;\n                    break;\n                  case 7:\n                    _context9.prev = 7;\n                    _context9.t0 = _context9[\"catch\"](0);\n                    console.error(\"Failed to fetch commented orders:\", _context9.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 11:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }, _callee9, null, [[0, 7]]);\n            }));\n            return function (_x18, _x19) {\n              return _ref9.apply(this, arguments);\n            };\n          }());\n          // ------------------------ end of orders ------------------------\n          // Get products from products table\n          app.get(\"/api/products\", /*#__PURE__*/function () {\n            var _ref10 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(req, res) {\n              var products;\n              return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n                while (1) switch (_context10.prev = _context10.next) {\n                  case 0:\n                    _context10.next = 2;\n                    return db.collection(\"products\").find({}).toArray();\n                  case 2:\n                    products = _context10.sent;\n                    res.send(products);\n                  case 4:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }, _callee10);\n            }));\n            return function (_x20, _x21) {\n              return _ref10.apply(this, arguments);\n            };\n          }());\n          app.get(\"/api/users/:userId/cart\", /*#__PURE__*/function () {\n            var _ref11 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(req, res) {\n              var user, populatedCart;\n              return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n                while (1) switch (_context11.prev = _context11.next) {\n                  case 0:\n                    _context11.next = 2;\n                    return db.collection(\"users\").findOne({\n                      id: req.params.userId\n                    });\n                  case 2:\n                    user = _context11.sent;\n                    _context11.next = 5;\n                    return populatedCartIds((user === null || user === void 0 ? void 0 : user.cartItems) || []);\n                  case 5:\n                    populatedCart = _context11.sent;\n                    // passing cartItems as ids argument\n                    res.json(populatedCart);\n                  case 7:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }, _callee11);\n            }));\n            return function (_x22, _x23) {\n              return _ref11.apply(this, arguments);\n            };\n          }());\n          app.get(\"/api/product/:productId\", /*#__PURE__*/function () {\n            var _ref12 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(req, res) {\n              var productId, product;\n              return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n                while (1) switch (_context12.prev = _context12.next) {\n                  case 0:\n                    productId = req.params.productId;\n                    console.log(\"productId :\", (0, _typeof2[\"default\"])(productId), productId);\n                    _context12.next = 4;\n                    return db.collection(\"products\").findOne({\n                      id: productId\n                    });\n                  case 4:\n                    product = _context12.sent;\n                    res.json(product);\n                  case 6:\n                  case \"end\":\n                    return _context12.stop();\n                }\n              }, _callee12);\n            }));\n            return function (_x24, _x25) {\n              return _ref12.apply(this, arguments);\n            };\n          }());\n\n          // ------ Add item to cart w/ POST callback function\n          app.post(\"/api/users/:userId/cart\", /*#__PURE__*/function () {\n            var _ref13 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(req, res) {\n              var userId, productId, existingUser, user, populatedCart;\n              return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n                while (1) switch (_context13.prev = _context13.next) {\n                  case 0:\n                    userId = req.params.userId;\n                    productId = req.body.id;\n                    _context13.next = 4;\n                    return db.collection(\"users\").findOne({\n                      id: userId\n                    });\n                  case 4:\n                    existingUser = _context13.sent;\n                    if (existingUser) {\n                      _context13.next = 8;\n                      break;\n                    }\n                    _context13.next = 8;\n                    return db.collection(\"users\").insertOne({\n                      id: userId,\n                      cartItems: []\n                    });\n                  case 8:\n                    _context13.next = 10;\n                    return db.collection(\"users\").updateOne({\n                      id: userId\n                    }, {\n                      $addToSet: {\n                        cartItems: productId\n                      } // $addToSet doesn't add duplicate items like $push\n                    });\n                  case 10:\n                    _context13.next = 12;\n                    return db.collection(\"users\").findOne({\n                      id: req.params.userId\n                    });\n                  case 12:\n                    user = _context13.sent;\n                    _context13.next = 15;\n                    return populatedCartIds((user === null || user === void 0 ? void 0 : user.cartItems) || []);\n                  case 15:\n                    populatedCart = _context13.sent;\n                    // passing cartItems as ids argument\n                    res.json(populatedCart);\n                  case 17:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }, _callee13);\n            }));\n            return function (_x26, _x27) {\n              return _ref13.apply(this, arguments);\n            };\n          }());\n\n          // ------ Remove item from cart w/ DELETE callback function\n          app[\"delete\"](\"/api/users/:userId/cart/:productId\", /*#__PURE__*/function () {\n            var _ref14 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(req, res) {\n              var userId, productId, user, populatedCart;\n              return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n                while (1) switch (_context14.prev = _context14.next) {\n                  case 0:\n                    userId = req.params.userId;\n                    productId = req.params.productId;\n                    _context14.next = 4;\n                    return db.collection(\"users\").updateOne({\n                      id: userId\n                    }, {\n                      $pull: {\n                        cartItems: productId\n                      }\n                    });\n                  case 4:\n                    _context14.next = 6;\n                    return db.collection(\"users\").findOne({\n                      id: req.params.userId\n                    });\n                  case 6:\n                    user = _context14.sent;\n                    _context14.next = 9;\n                    return populatedCartIds((user === null || user === void 0 ? void 0 : user.cartItems) || []);\n                  case 9:\n                    populatedCart = _context14.sent;\n                    // passing cartItems as ids argument\n                    res.json(populatedCart);\n                  case 11:\n                  case \"end\":\n                    return _context14.stop();\n                }\n              }, _callee14);\n            }));\n            return function (_x28, _x29) {\n              return _ref14.apply(this, arguments);\n            };\n          }());\n          app.listen(8000, function () {\n            console.log(\"Server is listening on port 8000\");\n          });\n        case 25:\n        case \"end\":\n          return _context16.stop();\n      }\n    }, _callee16);\n  }));\n  return _start.apply(this, arguments);\n}\nstart();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_mongodb","require","_path","_interopRequireDefault","_express","start","_start","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee16","mongodbURL","client","db","app","populatedCartIds","_populatedCartIds","wrap","_callee16$","_context16","prev","next","_populatedCartIds3","_callee15","ids","_callee15$","_context15","abrupt","Promise","all","map","id","collection","findOne","stop","_populatedCartIds2","_x","MongoClient","connect","express","use","json","path","join","__dirname","get","_ref","_callee","req","res","orders","_callee$","_context","find","toArray","sent","console","log","send","t0","error","status","_x2","_x3","_ref2","_callee2","lastOrder","_callee2$","_context2","sort","orderId","limit","length","_x4","_x5","post","_ref3","_callee3","newOrder","_callee3$","_context3","body","insertOne","_x6","_x7","put","_ref4","_callee4","userId","_callee4$","_context4","params","updateOne","$addToSet","purchasedOrders","_x8","_x9","_ref5","_callee5","order","_callee5$","_context5","parseInt","_x10","_x11","_ref6","_callee6","_req$body","address","paymentDetails","orderStatus","result","_callee6$","_context6","$set","modifiedCount","_x12","_x13","_ref7","_callee7","_callee7$","_context7","_x14","_x15","_ref8","_callee8","comment","_callee8$","_context8","_x16","_x17","_ref9","_callee9","ordersWithComments","_callee9$","_context9","$nin","_x18","_x19","_ref10","_callee10","products","_callee10$","_context10","_x20","_x21","_ref11","_callee11","user","populatedCart","_callee11$","_context11","cartItems","_x22","_x23","_ref12","_callee12","productId","product","_callee12$","_context12","_typeof2","_x24","_x25","_ref13","_callee13","existingUser","_callee13$","_context13","_x26","_x27","_ref14","_callee14","_callee14$","_context14","$pull","_x28","_x29","listen"],"sourceRoot":"/Users/bill.m/Desktop/master/Swinburne/vault-pixel/back-end/src/","sources":["server.js"],"sourcesContent":["import { MongoClient } from \"mongodb\";\nimport path from \"path\";\nimport express from \"express\";\n\n// Connect MongoDB when the server is started\nasync function start() {\n  const mongodbURL = `mongodb+srv://vaultpixel-db:769s46jD1a2fLPNK@database1.sqf5wlh.mongodb.net/?retryWrites=true&w=majority&appName=Database1`;\n  const client = new MongoClient(mongodbURL);\n\n  await client.connect();\n  const db = client.db(\"vaultpixel-db\");\n\n  const app = express();\n\n  app.use(express.json());\n  app.use(\"/images\", express.static(path.join(__dirname, \"../assets/wallets\"))); // Enable Express server to serve images for the front-end\n\n  async function populatedCartIds(ids) {\n    return Promise.all(\n      ids.map((id) => db.collection(\"products\").findOne({ id })) // Equivalent to using map() in API calling level\n    );\n  }\n\n  // ------ Read items in the database using app.get() call back\n\n  // Get all orders from orders table\n  app.get(\"/api/orders\", async (req, res) => {\n    try {\n      const orders = await db.collection(\"orders\").find({}).toArray();\n      console.log(\"Orders fetched from database:\", orders);\n      res.send(orders);\n    } catch (error) {\n      console.error(\"Failed to fetch orders:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // Get the last order from orders table\n  app.get(\"/api/orders/last\", async (req, res) => {\n    try {\n      const lastOrder = await db\n        .collection(\"orders\")\n        .find({})\n        .sort({ orderId: -1 })\n        .limit(1)\n        .toArray();\n      if (lastOrder.length === 0) {\n        res.status(404).send(\"No orders found\");\n      } else {\n        res.send(lastOrder[0]);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch last order:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // Post a new order into orders table\n  app.post(\"/api/orders\", async (req, res) => {\n    try {\n      const newOrder = req.body;\n      await db.collection(\"orders\").insertOne(newOrder);\n      res.status(201).send(\"Order created\");\n    } catch (error) {\n      console.error(\"Failed to create order:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // Update user's purchasedOrders list\n  app.put(\"/api/users/:userId/purchasedOrders\", async (req, res) => {\n    try {\n      const userId = req.params.userId;\n      const { orderId } = req.body;\n\n      await db.collection(\"users\").updateOne(\n        { id: userId },\n        {\n          $addToSet: { purchasedOrders: orderId }, // $addToSet prevents duplicates\n        }\n      );\n\n      res.status(200).send(\"Purchased orders updated\");\n    } catch (error) {\n      console.error(\"Failed to update purchased orders:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // Get a specific order by orderId\n  app.get(\"/api/payment/:orderId\", async (req, res) => {\n    try {\n      const orderId = parseInt(req.params.orderId); // Convert orderId to integer if stored as integer in MongoDB\n      const order = await db.collection(\"orders\").findOne({ orderId });\n      if (!order) {\n        res.status(404).send(\"Order not found\");\n      } else {\n        res.json(order);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch order:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // PUT endpoint to update order\n  app.put(\"/api/orders/:orderId/update\", async (req, res) => {\n    const orderId = parseInt(req.params.orderId);\n    const { address, paymentDetails, orderStatus } = req.body;\n\n    try {\n      const result = await db.collection(\"orders\").updateOne(\n        { orderId: orderId },\n        {\n          $set: {\n            address: address,\n            paymentDetails: paymentDetails,\n            orderStatus: orderStatus,\n          },\n        }\n      );\n\n      if (result.modifiedCount === 0) {\n        res.status(404).send(\"Order not found\");\n      } else {\n        res.status(200).send(\"Order updated\");\n      }\n    } catch (error) {\n      console.error(\"Failed to update order:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // Get all orders for a specific user\n  app.get(\"/api/orders/user/:userId\", async (req, res) => {\n    try {\n      const userId = req.params.userId;\n      const orders = await db\n        .collection(\"orders\")\n        .find({ userId: userId })\n        .toArray();\n      if (orders.length === 0) {\n        res.status(404).send(\"No orders found for this user.\");\n      } else {\n        res.status(200).json(orders);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch orders for user:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // PUT endpoint to update order's comment\n  app.put(\"/api/orders/:orderId/comment\", async (req, res) => {\n    const orderId = parseInt(req.params.orderId);\n    const { comment } = req.body;\n\n    try {\n      const result = await db\n        .collection(\"orders\")\n        .updateOne({ orderId: orderId }, { $set: { comment: comment } });\n\n      if (result.modifiedCount === 0) {\n        res.status(404).send(\"Order not found or no update needed.\");\n      } else {\n        res.status(200).send(\"Comment updated successfully.\");\n      }\n    } catch (error) {\n      console.error(\"Failed to update comment:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // Get all commented orders\n  app.get(\"/api/orders/commented\", async (req, res) => {\n    try {\n      const ordersWithComments = await db\n        .collection(\"orders\")\n        .find({ comment: { $nin: [\"\", null] } }) // This query selects orders where comment is neither \"\" nor null\n        .toArray();\n      if (ordersWithComments.length === 0) {\n        res.status(404).send(\"No commented orders found.\");\n      } else {\n        res.json(ordersWithComments);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch commented orders:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n  // ------------------------ end of orders ------------------------\n  // Get products from products table\n  app.get(\"/api/products\", async (req, res) => {\n    const products = await db.collection(\"products\").find({}).toArray();\n    res.send(products);\n  });\n\n  app.get(\"/api/users/:userId/cart\", async (req, res) => {\n    const user = await db\n      .collection(\"users\")\n      .findOne({ id: req.params.userId });\n    const populatedCart = await populatedCartIds(user?.cartItems || []); // passing cartItems as ids argument\n    res.json(populatedCart);\n  });\n\n  app.get(\"/api/product/:productId\", async (req, res) => {\n    const productId = req.params.productId;\n    console.log(\"productId :\", typeof productId, productId);\n    const product = await db.collection(\"products\").findOne({ id: productId });\n    res.json(product);\n  });\n\n  // ------ Add item to cart w/ POST callback function\n  app.post(\"/api/users/:userId/cart\", async (req, res) => {\n    const userId = req.params.userId;\n    const productId = req.body.id;\n\n    const existingUser = await db.collection(\"users\").findOne({ id: userId }); // id in MongoBD's user collection that is equal to userId from firebaseAuth\n\n    if (!existingUser) {\n      await db.collection(\"users\").insertOne({ id: userId, cartItems: [] }); // If not there already, insert into the collection.\n    }\n\n    await db.collection(\"users\").updateOne(\n      { id: userId },\n      {\n        $addToSet: { cartItems: productId }, // $addToSet doesn't add duplicate items like $push\n      }\n    );\n    const user = await db\n      .collection(\"users\")\n      .findOne({ id: req.params.userId });\n    const populatedCart = await populatedCartIds(user?.cartItems || []); // passing cartItems as ids argument\n    res.json(populatedCart);\n  });\n\n  // ------ Remove item from cart w/ DELETE callback function\n  app.delete(\"/api/users/:userId/cart/:productId\", async (req, res) => {\n    const userId = req.params.userId;\n    const productId = req.params.productId;\n    await db.collection(\"users\").updateOne(\n      { id: userId },\n      {\n        $pull: { cartItems: productId },\n      }\n    );\n    const user = await db\n      .collection(\"users\")\n      .findOne({ id: req.params.userId });\n    const populatedCart = await populatedCartIds(user?.cartItems || []); // passing cartItems as ids argument\n    res.json(populatedCart);\n  });\n\n  app.listen(8000, () => {\n    console.log(\"Server is listening on port 8000\");\n  });\n}\n\nstart();\n"],"mappings":"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","ignoreList":[]}},"mtime":1717317901073}}