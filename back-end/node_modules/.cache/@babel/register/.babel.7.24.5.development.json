{"{\"assumptions\":{},\"sourceRoot\":\"/Users/bill.m/Desktop/master/Swinburne/vault-pixel/back-end/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/bill.m/Desktop/master/Swinburne/vault-pixel/back-end\",\"filename\":\"/Users/bill.m/Desktop/master/Swinburne/vault-pixel/back-end/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/bill.m/Desktop/master/Swinburne/vault-pixel/back-end\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.5:development":{"value":{"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _mongodb = require(\"mongodb\");\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _express = _interopRequireDefault(require(\"express\"));\n// Connect MongoDB when the server is started\nfunction start() {\n  return _start.apply(this, arguments);\n}\nfunction _start() {\n  _start = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee17() {\n    var mongodbURL, client, db, app, populatedCartIds, _populatedCartIds, port;\n    return _regenerator[\"default\"].wrap(function _callee17$(_context17) {\n      while (1) switch (_context17.prev = _context17.next) {\n        case 0:\n          _populatedCartIds = function _populatedCartIds3() {\n            _populatedCartIds = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee16(ids) {\n              return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n                while (1) switch (_context16.prev = _context16.next) {\n                  case 0:\n                    return _context16.abrupt(\"return\", Promise.all(ids.map(function (id) {\n                      return db.collection(\"products\").findOne({\n                        id: id\n                      });\n                    }) // Equivalent to using map() in API calling level\n                    ));\n                  case 1:\n                  case \"end\":\n                    return _context16.stop();\n                }\n              }, _callee16);\n            }));\n            return _populatedCartIds.apply(this, arguments);\n          };\n          populatedCartIds = function _populatedCartIds2(_x) {\n            return _populatedCartIds.apply(this, arguments);\n          };\n          mongodbURL = \"mongodb+srv://vaultpixel-db:769s46jD1a2fLPNK@database1.sqf5wlh.mongodb.net/?retryWrites=true&w=majority&appName=Database1\";\n          client = new _mongodb.MongoClient(mongodbURL);\n          _context17.next = 6;\n          return client.connect();\n        case 6:\n          db = client.db(\"vaultpixel-db\");\n          app = (0, _express[\"default\"])();\n          app.use(_express[\"default\"].json());\n          app.use(\"/images\", _express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, \"../assets/wallets\"))); // Enable Express server to serve images for the front-end\n\n          app.use(_express[\"default\"][\"static\"](_path[\"default\"].resolve(__dirname, \"../dist\"), {\n            maxAge: \"1y\",\n            etag: false\n          }));\n\n          // ------------ users starts here ------------//\n          app.post(\"/api/users\", /*#__PURE__*/function () {\n            var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res) {\n              var _req$body, uid, username, users, existingUser;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    _req$body = req.body, uid = _req$body.uid, username = _req$body.username;\n                    users = db.collection(\"users\");\n                    _context.prev = 2;\n                    _context.next = 5;\n                    return users.findOne({\n                      id: uid\n                    });\n                  case 5:\n                    existingUser = _context.sent;\n                    if (!existingUser) {\n                      _context.next = 9;\n                      break;\n                    }\n                    res.status(409).send(\"User already exists\");\n                    return _context.abrupt(\"return\");\n                  case 9:\n                    _context.next = 11;\n                    return users.insertOne({\n                      id: uid,\n                      username: username,\n                      createdAt: new Date()\n                    });\n                  case 11:\n                    res.status(201).send(\"User added successfully\");\n                    _context.next = 18;\n                    break;\n                  case 14:\n                    _context.prev = 14;\n                    _context.t0 = _context[\"catch\"](2);\n                    console.error(\"Failed to insert user:\", _context.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 18:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee, null, [[2, 14]]);\n            }));\n            return function (_x2, _x3) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n\n          // ------------ uers ends here ------------//\n\n          // Get all orders from orders table\n          app.get(\"/api/orders\", /*#__PURE__*/function () {\n            var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res) {\n              var orders;\n              return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.prev = 0;\n                    _context2.next = 3;\n                    return db.collection(\"orders\").find({}).toArray();\n                  case 3:\n                    orders = _context2.sent;\n                    console.log(\"Orders fetched from database:\", orders);\n                    res.send(orders);\n                    _context2.next = 12;\n                    break;\n                  case 8:\n                    _context2.prev = 8;\n                    _context2.t0 = _context2[\"catch\"](0);\n                    console.error(\"Failed to fetch orders:\", _context2.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 12:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }, _callee2, null, [[0, 8]]);\n            }));\n            return function (_x4, _x5) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n\n          // Get the last order from orders table\n          app.get(\"/api/orders/last\", /*#__PURE__*/function () {\n            var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res) {\n              var lastOrder;\n              return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n                while (1) switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.prev = 0;\n                    _context3.next = 3;\n                    return db.collection(\"orders\").find({}).sort({\n                      orderId: -1\n                    }).limit(1).toArray();\n                  case 3:\n                    lastOrder = _context3.sent;\n                    if (lastOrder.length === 0) {\n                      res.status(404).send(\"No orders found\");\n                    } else {\n                      res.send(lastOrder[0]);\n                    }\n                    _context3.next = 11;\n                    break;\n                  case 7:\n                    _context3.prev = 7;\n                    _context3.t0 = _context3[\"catch\"](0);\n                    console.error(\"Failed to fetch last order:\", _context3.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 11:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }, _callee3, null, [[0, 7]]);\n            }));\n            return function (_x6, _x7) {\n              return _ref3.apply(this, arguments);\n            };\n          }());\n\n          // Post a new order into orders table\n          app.post(\"/api/orders\", /*#__PURE__*/function () {\n            var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res) {\n              var newOrder;\n              return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n                while (1) switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.prev = 0;\n                    newOrder = req.body;\n                    _context4.next = 4;\n                    return db.collection(\"orders\").insertOne(newOrder);\n                  case 4:\n                    res.status(201).send(\"Order created\");\n                    _context4.next = 11;\n                    break;\n                  case 7:\n                    _context4.prev = 7;\n                    _context4.t0 = _context4[\"catch\"](0);\n                    console.error(\"Failed to create order:\", _context4.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 11:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }, _callee4, null, [[0, 7]]);\n            }));\n            return function (_x8, _x9) {\n              return _ref4.apply(this, arguments);\n            };\n          }());\n\n          // Update user's purchasedOrders list\n          app.put(\"/api/users/:userId/purchasedOrders\", /*#__PURE__*/function () {\n            var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(req, res) {\n              var userId, orderId;\n              return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n                while (1) switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.prev = 0;\n                    userId = req.params.userId;\n                    orderId = req.body.orderId;\n                    _context5.next = 5;\n                    return db.collection(\"users\").updateOne({\n                      id: userId\n                    }, {\n                      $addToSet: {\n                        purchasedOrders: orderId\n                      } // $addToSet prevents duplicates\n                    });\n                  case 5:\n                    res.status(200).send(\"Purchased orders updated\");\n                    _context5.next = 12;\n                    break;\n                  case 8:\n                    _context5.prev = 8;\n                    _context5.t0 = _context5[\"catch\"](0);\n                    console.error(\"Failed to update purchased orders:\", _context5.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 12:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }, _callee5, null, [[0, 8]]);\n            }));\n            return function (_x10, _x11) {\n              return _ref5.apply(this, arguments);\n            };\n          }());\n\n          // Get a specific order by orderId\n          app.get(\"/api/payment/:orderId\", /*#__PURE__*/function () {\n            var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(req, res) {\n              var orderId, order;\n              return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n                while (1) switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.prev = 0;\n                    orderId = parseInt(req.params.orderId); // Convert orderId to integer if stored as integer in MongoDB\n                    _context6.next = 4;\n                    return db.collection(\"orders\").findOne({\n                      orderId: orderId\n                    });\n                  case 4:\n                    order = _context6.sent;\n                    if (!order) {\n                      res.status(404).send(\"Order not found\");\n                    } else {\n                      res.json(order);\n                    }\n                    _context6.next = 12;\n                    break;\n                  case 8:\n                    _context6.prev = 8;\n                    _context6.t0 = _context6[\"catch\"](0);\n                    console.error(\"Failed to fetch order:\", _context6.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 12:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }, _callee6, null, [[0, 8]]);\n            }));\n            return function (_x12, _x13) {\n              return _ref6.apply(this, arguments);\n            };\n          }());\n\n          // PUT endpoint to update order\n          app.put(\"/api/orders/:orderId/update\", /*#__PURE__*/function () {\n            var _ref7 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(req, res) {\n              var orderId, _req$body2, address, paymentDetails, orderStatus, result;\n              return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n                while (1) switch (_context7.prev = _context7.next) {\n                  case 0:\n                    orderId = parseInt(req.params.orderId);\n                    _req$body2 = req.body, address = _req$body2.address, paymentDetails = _req$body2.paymentDetails, orderStatus = _req$body2.orderStatus;\n                    _context7.prev = 2;\n                    _context7.next = 5;\n                    return db.collection(\"orders\").updateOne({\n                      orderId: orderId\n                    }, {\n                      $set: {\n                        address: address,\n                        paymentDetails: paymentDetails,\n                        orderStatus: orderStatus\n                      }\n                    });\n                  case 5:\n                    result = _context7.sent;\n                    if (result.modifiedCount === 0) {\n                      res.status(404).send(\"Order not found\");\n                    } else {\n                      res.status(200).send(\"Order updated\");\n                    }\n                    _context7.next = 13;\n                    break;\n                  case 9:\n                    _context7.prev = 9;\n                    _context7.t0 = _context7[\"catch\"](2);\n                    console.error(\"Failed to update order:\", _context7.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 13:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }, _callee7, null, [[2, 9]]);\n            }));\n            return function (_x14, _x15) {\n              return _ref7.apply(this, arguments);\n            };\n          }());\n\n          // Get all orders for a specific user\n          app.get(\"/api/orders/user/:userId\", /*#__PURE__*/function () {\n            var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(req, res) {\n              var userId, orders;\n              return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n                while (1) switch (_context8.prev = _context8.next) {\n                  case 0:\n                    _context8.prev = 0;\n                    userId = req.params.userId;\n                    _context8.next = 4;\n                    return db.collection(\"orders\").find({\n                      userId: userId\n                    }).toArray();\n                  case 4:\n                    orders = _context8.sent;\n                    if (orders.length === 0) {\n                      // Instead of sending a 404 error, return an empty array with a 200 status\n                      res.status(200).json([]);\n                    } else {\n                      res.status(200).json(orders);\n                    }\n                    _context8.next = 12;\n                    break;\n                  case 8:\n                    _context8.prev = 8;\n                    _context8.t0 = _context8[\"catch\"](0);\n                    console.error(\"Failed to fetch orders for user:\", _context8.t0);\n                    res.status(500).send(\"Internal Server Stor Error\");\n                  case 12:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }, _callee8, null, [[0, 8]]);\n            }));\n            return function (_x16, _x17) {\n              return _ref8.apply(this, arguments);\n            };\n          }());\n\n          // PUT endpoint to update order's comment\n          app.put(\"/api/orders/:orderId/comment\", /*#__PURE__*/function () {\n            var _ref9 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(req, res) {\n              var orderId, comment, result;\n              return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n                while (1) switch (_context9.prev = _context9.next) {\n                  case 0:\n                    orderId = parseInt(req.params.orderId);\n                    comment = req.body.comment;\n                    _context9.prev = 2;\n                    _context9.next = 5;\n                    return db.collection(\"orders\").updateOne({\n                      orderId: orderId\n                    }, {\n                      $set: {\n                        comment: comment\n                      }\n                    });\n                  case 5:\n                    result = _context9.sent;\n                    if (result.modifiedCount === 0) {\n                      res.status(404).send(\"Order not found or no update needed.\");\n                    } else {\n                      res.status(200).send(\"Comment updated successfully.\");\n                    }\n                    _context9.next = 13;\n                    break;\n                  case 9:\n                    _context9.prev = 9;\n                    _context9.t0 = _context9[\"catch\"](2);\n                    console.error(\"Failed to update comment:\", _context9.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 13:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }, _callee9, null, [[2, 9]]);\n            }));\n            return function (_x18, _x19) {\n              return _ref9.apply(this, arguments);\n            };\n          }());\n\n          // Get all commented orders\n          app.get(\"/api/orders/commented\", /*#__PURE__*/function () {\n            var _ref10 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(req, res) {\n              var ordersWithComments;\n              return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n                while (1) switch (_context10.prev = _context10.next) {\n                  case 0:\n                    _context10.prev = 0;\n                    _context10.next = 3;\n                    return db.collection(\"orders\").find({\n                      comment: {\n                        $nin: [\"\", null]\n                      }\n                    }) // This query selects orders where comment is neither \"\" nor null\n                    .toArray();\n                  case 3:\n                    ordersWithComments = _context10.sent;\n                    if (ordersWithComments.length === 0) {\n                      res.status(404).send(\"No commented orders found.\");\n                    } else {\n                      res.json(ordersWithComments);\n                    }\n                    _context10.next = 11;\n                    break;\n                  case 7:\n                    _context10.prev = 7;\n                    _context10.t0 = _context10[\"catch\"](0);\n                    console.error(\"Failed to fetch commented orders:\", _context10.t0);\n                    res.status(500).send(\"Internal Server Error\");\n                  case 11:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }, _callee10, null, [[0, 7]]);\n            }));\n            return function (_x20, _x21) {\n              return _ref10.apply(this, arguments);\n            };\n          }());\n          // ------------------------ end of orders ------------------------\n          // Get products from products table\n          app.get(\"/api/products\", /*#__PURE__*/function () {\n            var _ref11 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(req, res) {\n              var products;\n              return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n                while (1) switch (_context11.prev = _context11.next) {\n                  case 0:\n                    _context11.next = 2;\n                    return db.collection(\"products\").find({}).toArray();\n                  case 2:\n                    products = _context11.sent;\n                    res.send(products);\n                  case 4:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }, _callee11);\n            }));\n            return function (_x22, _x23) {\n              return _ref11.apply(this, arguments);\n            };\n          }());\n          app.get(\"/api/users/:userId/cart\", /*#__PURE__*/function () {\n            var _ref12 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(req, res) {\n              var user, populatedCart;\n              return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n                while (1) switch (_context12.prev = _context12.next) {\n                  case 0:\n                    _context12.next = 2;\n                    return db.collection(\"users\").findOne({\n                      id: req.params.userId\n                    });\n                  case 2:\n                    user = _context12.sent;\n                    _context12.next = 5;\n                    return populatedCartIds((user === null || user === void 0 ? void 0 : user.cartItems) || []);\n                  case 5:\n                    populatedCart = _context12.sent;\n                    // passing cartItems as ids argument\n                    res.json(populatedCart);\n                  case 7:\n                  case \"end\":\n                    return _context12.stop();\n                }\n              }, _callee12);\n            }));\n            return function (_x24, _x25) {\n              return _ref12.apply(this, arguments);\n            };\n          }());\n          app.get(\"/api/product/:productId\", /*#__PURE__*/function () {\n            var _ref13 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(req, res) {\n              var productId, product;\n              return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n                while (1) switch (_context13.prev = _context13.next) {\n                  case 0:\n                    productId = req.params.productId;\n                    console.log(\"productId :\", (0, _typeof2[\"default\"])(productId), productId);\n                    _context13.next = 4;\n                    return db.collection(\"products\").findOne({\n                      id: productId\n                    });\n                  case 4:\n                    product = _context13.sent;\n                    res.json(product);\n                  case 6:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }, _callee13);\n            }));\n            return function (_x26, _x27) {\n              return _ref13.apply(this, arguments);\n            };\n          }());\n\n          // ------ Add item to cart w/ POST callback function\n          app.post(\"/api/users/:userId/cart\", /*#__PURE__*/function () {\n            var _ref14 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(req, res) {\n              var userId, productId, existingUser, user, populatedCart;\n              return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n                while (1) switch (_context14.prev = _context14.next) {\n                  case 0:\n                    userId = req.params.userId;\n                    productId = req.body.id;\n                    _context14.next = 4;\n                    return db.collection(\"users\").findOne({\n                      id: userId\n                    });\n                  case 4:\n                    existingUser = _context14.sent;\n                    if (existingUser) {\n                      _context14.next = 8;\n                      break;\n                    }\n                    _context14.next = 8;\n                    return db.collection(\"users\").insertOne({\n                      id: userId,\n                      cartItems: []\n                    });\n                  case 8:\n                    _context14.next = 10;\n                    return db.collection(\"users\").updateOne({\n                      id: userId\n                    }, {\n                      $addToSet: {\n                        cartItems: productId\n                      } // $addToSet doesn't add duplicate items like $push\n                    });\n                  case 10:\n                    _context14.next = 12;\n                    return db.collection(\"users\").findOne({\n                      id: req.params.userId\n                    });\n                  case 12:\n                    user = _context14.sent;\n                    _context14.next = 15;\n                    return populatedCartIds((user === null || user === void 0 ? void 0 : user.cartItems) || []);\n                  case 15:\n                    populatedCart = _context14.sent;\n                    // passing cartItems as ids argument\n                    res.json(populatedCart);\n                  case 17:\n                  case \"end\":\n                    return _context14.stop();\n                }\n              }, _callee14);\n            }));\n            return function (_x28, _x29) {\n              return _ref14.apply(this, arguments);\n            };\n          }());\n\n          // ------ Remove item from cart w/ DELETE callback function\n          app[\"delete\"](\"/api/users/:userId/cart/:productId\", /*#__PURE__*/function () {\n            var _ref15 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(req, res) {\n              var userId, productId, user, populatedCart;\n              return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n                while (1) switch (_context15.prev = _context15.next) {\n                  case 0:\n                    userId = req.params.userId;\n                    productId = req.params.productId;\n                    _context15.next = 4;\n                    return db.collection(\"users\").updateOne({\n                      id: userId\n                    }, {\n                      $pull: {\n                        cartItems: productId\n                      }\n                    });\n                  case 4:\n                    _context15.next = 6;\n                    return db.collection(\"users\").findOne({\n                      id: req.params.userId\n                    });\n                  case 6:\n                    user = _context15.sent;\n                    _context15.next = 9;\n                    return populatedCartIds((user === null || user === void 0 ? void 0 : user.cartItems) || []);\n                  case 9:\n                    populatedCart = _context15.sent;\n                    // passing cartItems as ids argument\n                    res.json(populatedCart);\n                  case 11:\n                  case \"end\":\n                    return _context15.stop();\n                }\n              }, _callee15);\n            }));\n            return function (_x30, _x31) {\n              return _ref15.apply(this, arguments);\n            };\n          }());\n\n          // -------------------- Deployment starts here --------------------\n          app.get(\"*\", function (req, res) {\n            res.sendFile(_path[\"default\"].join(__dirname, \"../dist/index.html\"));\n          });\n          port = process.env.PORT || 8000;\n          app.listen(port, function () {\n            console.log(\"Server is listening on port \" + port);\n          });\n        case 29:\n        case \"end\":\n          return _context17.stop();\n      }\n    }, _callee17);\n  }));\n  return _start.apply(this, arguments);\n}\nstart();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_mongodb","require","_path","_interopRequireDefault","_express","start","_start","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee17","mongodbURL","client","db","app","populatedCartIds","_populatedCartIds","port","wrap","_callee17$","_context17","prev","next","_populatedCartIds3","_callee16","ids","_callee16$","_context16","abrupt","Promise","all","map","id","collection","findOne","stop","_populatedCartIds2","_x","MongoClient","connect","express","use","json","path","join","__dirname","resolve","maxAge","etag","post","_ref","_callee","req","res","_req$body","uid","username","users","existingUser","_callee$","_context","body","sent","status","send","insertOne","createdAt","Date","t0","console","error","_x2","_x3","get","_ref2","_callee2","orders","_callee2$","_context2","find","toArray","log","_x4","_x5","_ref3","_callee3","lastOrder","_callee3$","_context3","sort","orderId","limit","length","_x6","_x7","_ref4","_callee4","newOrder","_callee4$","_context4","_x8","_x9","put","_ref5","_callee5","userId","_callee5$","_context5","params","updateOne","$addToSet","purchasedOrders","_x10","_x11","_ref6","_callee6","order","_callee6$","_context6","parseInt","_x12","_x13","_ref7","_callee7","_req$body2","address","paymentDetails","orderStatus","result","_callee7$","_context7","$set","modifiedCount","_x14","_x15","_ref8","_callee8","_callee8$","_context8","_x16","_x17","_ref9","_callee9","comment","_callee9$","_context9","_x18","_x19","_ref10","_callee10","ordersWithComments","_callee10$","_context10","$nin","_x20","_x21","_ref11","_callee11","products","_callee11$","_context11","_x22","_x23","_ref12","_callee12","user","populatedCart","_callee12$","_context12","cartItems","_x24","_x25","_ref13","_callee13","productId","product","_callee13$","_context13","_typeof2","_x26","_x27","_ref14","_callee14","_callee14$","_context14","_x28","_x29","_ref15","_callee15","_callee15$","_context15","$pull","_x30","_x31","sendFile","process","env","PORT","listen"],"sourceRoot":"/Users/bill.m/Desktop/master/Swinburne/vault-pixel/back-end/src/","sources":["server.js"],"sourcesContent":["import { MongoClient } from \"mongodb\";\nimport path from \"path\";\nimport express from \"express\";\n\n// Connect MongoDB when the server is started\nasync function start() {\n  const mongodbURL = `mongodb+srv://vaultpixel-db:769s46jD1a2fLPNK@database1.sqf5wlh.mongodb.net/?retryWrites=true&w=majority&appName=Database1`;\n  const client = new MongoClient(mongodbURL);\n\n  await client.connect();\n  const db = client.db(\"vaultpixel-db\");\n\n  const app = express();\n\n  app.use(express.json());\n  app.use(\"/images\", express.static(path.join(__dirname, \"../assets/wallets\"))); // Enable Express server to serve images for the front-end\n\n  app.use(\n    express.static(path.resolve(__dirname, \"../dist\"), {\n      maxAge: \"1y\",\n      etag: false,\n    })\n  );\n\n  async function populatedCartIds(ids) {\n    return Promise.all(\n      ids.map((id) => db.collection(\"products\").findOne({ id })) // Equivalent to using map() in API calling level\n    );\n  }\n\n  // ------------ users starts here ------------//\n  app.post(\"/api/users\", async (req, res) => {\n    const { uid, username } = req.body;\n    const users = db.collection(\"users\");\n\n    try {\n      // Check if user already exists\n      const existingUser = await users.findOne({ id: uid });\n      if (existingUser) {\n        res.status(409).send(\"User already exists\");\n        return;\n      }\n\n      // Insert new user if not exists\n      await users.insertOne({\n        id: uid,\n        username: username,\n        createdAt: new Date(),\n      });\n\n      res.status(201).send(\"User added successfully\");\n    } catch (error) {\n      console.error(\"Failed to insert user:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // ------------ uers ends here ------------//\n\n  // Get all orders from orders table\n  app.get(\"/api/orders\", async (req, res) => {\n    try {\n      const orders = await db.collection(\"orders\").find({}).toArray();\n      console.log(\"Orders fetched from database:\", orders);\n      res.send(orders);\n    } catch (error) {\n      console.error(\"Failed to fetch orders:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // Get the last order from orders table\n  app.get(\"/api/orders/last\", async (req, res) => {\n    try {\n      const lastOrder = await db\n        .collection(\"orders\")\n        .find({})\n        .sort({ orderId: -1 })\n        .limit(1)\n        .toArray();\n      if (lastOrder.length === 0) {\n        res.status(404).send(\"No orders found\");\n      } else {\n        res.send(lastOrder[0]);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch last order:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // Post a new order into orders table\n  app.post(\"/api/orders\", async (req, res) => {\n    try {\n      const newOrder = req.body;\n      await db.collection(\"orders\").insertOne(newOrder);\n      res.status(201).send(\"Order created\");\n    } catch (error) {\n      console.error(\"Failed to create order:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // Update user's purchasedOrders list\n  app.put(\"/api/users/:userId/purchasedOrders\", async (req, res) => {\n    try {\n      const userId = req.params.userId;\n      const { orderId } = req.body;\n\n      await db.collection(\"users\").updateOne(\n        { id: userId },\n        {\n          $addToSet: { purchasedOrders: orderId }, // $addToSet prevents duplicates\n        }\n      );\n\n      res.status(200).send(\"Purchased orders updated\");\n    } catch (error) {\n      console.error(\"Failed to update purchased orders:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // Get a specific order by orderId\n  app.get(\"/api/payment/:orderId\", async (req, res) => {\n    try {\n      const orderId = parseInt(req.params.orderId); // Convert orderId to integer if stored as integer in MongoDB\n      const order = await db.collection(\"orders\").findOne({ orderId });\n      if (!order) {\n        res.status(404).send(\"Order not found\");\n      } else {\n        res.json(order);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch order:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // PUT endpoint to update order\n  app.put(\"/api/orders/:orderId/update\", async (req, res) => {\n    const orderId = parseInt(req.params.orderId);\n    const { address, paymentDetails, orderStatus } = req.body;\n\n    try {\n      const result = await db.collection(\"orders\").updateOne(\n        { orderId: orderId },\n        {\n          $set: {\n            address: address,\n            paymentDetails: paymentDetails,\n            orderStatus: orderStatus,\n          },\n        }\n      );\n\n      if (result.modifiedCount === 0) {\n        res.status(404).send(\"Order not found\");\n      } else {\n        res.status(200).send(\"Order updated\");\n      }\n    } catch (error) {\n      console.error(\"Failed to update order:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // Get all orders for a specific user\n  app.get(\"/api/orders/user/:userId\", async (req, res) => {\n    try {\n      const userId = req.params.userId;\n      const orders = await db\n        .collection(\"orders\")\n        .find({ userId: userId })\n        .toArray();\n      if (orders.length === 0) {\n        // Instead of sending a 404 error, return an empty array with a 200 status\n        res.status(200).json([]);\n      } else {\n        res.status(200).json(orders);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch orders for user:\", error);\n      res.status(500).send(\"Internal Server Stor Error\");\n    }\n  });\n\n  // PUT endpoint to update order's comment\n  app.put(\"/api/orders/:orderId/comment\", async (req, res) => {\n    const orderId = parseInt(req.params.orderId);\n    const { comment } = req.body;\n\n    try {\n      const result = await db\n        .collection(\"orders\")\n        .updateOne({ orderId: orderId }, { $set: { comment: comment } });\n\n      if (result.modifiedCount === 0) {\n        res.status(404).send(\"Order not found or no update needed.\");\n      } else {\n        res.status(200).send(\"Comment updated successfully.\");\n      }\n    } catch (error) {\n      console.error(\"Failed to update comment:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n\n  // Get all commented orders\n  app.get(\"/api/orders/commented\", async (req, res) => {\n    try {\n      const ordersWithComments = await db\n        .collection(\"orders\")\n        .find({ comment: { $nin: [\"\", null] } }) // This query selects orders where comment is neither \"\" nor null\n        .toArray();\n      if (ordersWithComments.length === 0) {\n        res.status(404).send(\"No commented orders found.\");\n      } else {\n        res.json(ordersWithComments);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch commented orders:\", error);\n      res.status(500).send(\"Internal Server Error\");\n    }\n  });\n  // ------------------------ end of orders ------------------------\n  // Get products from products table\n  app.get(\"/api/products\", async (req, res) => {\n    const products = await db.collection(\"products\").find({}).toArray();\n    res.send(products);\n  });\n\n  app.get(\"/api/users/:userId/cart\", async (req, res) => {\n    const user = await db\n      .collection(\"users\")\n      .findOne({ id: req.params.userId });\n    const populatedCart = await populatedCartIds(user?.cartItems || []); // passing cartItems as ids argument\n    res.json(populatedCart);\n  });\n\n  app.get(\"/api/product/:productId\", async (req, res) => {\n    const productId = req.params.productId;\n    console.log(\"productId :\", typeof productId, productId);\n    const product = await db.collection(\"products\").findOne({ id: productId });\n    res.json(product);\n  });\n\n  // ------ Add item to cart w/ POST callback function\n  app.post(\"/api/users/:userId/cart\", async (req, res) => {\n    const userId = req.params.userId;\n    const productId = req.body.id;\n\n    const existingUser = await db.collection(\"users\").findOne({ id: userId }); // id in MongoBD's user collection that is equal to userId from firebaseAuth\n\n    if (!existingUser) {\n      await db.collection(\"users\").insertOne({ id: userId, cartItems: [] }); // If not there already, insert into the collection.\n    }\n\n    await db.collection(\"users\").updateOne(\n      { id: userId },\n      {\n        $addToSet: { cartItems: productId }, // $addToSet doesn't add duplicate items like $push\n      }\n    );\n    const user = await db\n      .collection(\"users\")\n      .findOne({ id: req.params.userId });\n    const populatedCart = await populatedCartIds(user?.cartItems || []); // passing cartItems as ids argument\n    res.json(populatedCart);\n  });\n\n  // ------ Remove item from cart w/ DELETE callback function\n  app.delete(\"/api/users/:userId/cart/:productId\", async (req, res) => {\n    const userId = req.params.userId;\n    const productId = req.params.productId;\n    await db.collection(\"users\").updateOne(\n      { id: userId },\n      {\n        $pull: { cartItems: productId },\n      }\n    );\n    const user = await db\n      .collection(\"users\")\n      .findOne({ id: req.params.userId });\n    const populatedCart = await populatedCartIds(user?.cartItems || []); // passing cartItems as ids argument\n    res.json(populatedCart);\n  });\n\n  // -------------------- Deployment starts here --------------------\n  app.get(\"*\", (req, res) => {\n    res.sendFile(path.join(__dirname, \"../dist/index.html\"));\n  });\n\n  const port = process.env.PORT || 8000;\n  app.listen(port, () => {\n    console.log(\"Server is listening on port \" + port);\n  });\n}\n\nstart();\n"],"mappings":"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","ignoreList":[]}},"mtime":1717391204500}}